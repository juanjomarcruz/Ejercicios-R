main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=2)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.2)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03,
width = 1)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03,
width = 1)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03,
width = 1.1)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03,
width = 1.1)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.03,
width = 4)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.2,
width = 4)
barplot(ventas,names.arg = vendedores,
main="Ventas por asesor",
xlab="Asesores",
ylab="Importe de ventas",
horiz=FALSE,
space=0.2,
width = 4)
datos <- rnorm(2500) #distribución normal de 2500 números
hist(datos)
hist(datos, main="Histograma de frecuencias")
hist(datos, main="Histograma de frecuencias",
xlab="datos")
hist(datos, main="Histograma de frecuencias",
xlab="datos",
ylab="frecuencias")
x <- rnorm(100)
y <- 2*x + rnorm(100)
plot(x,y)
plot(x,y,
main="Diagrama de dispersión")
plot(x,y,
main="Diagrama de dispersión",
xlab="X",
ylab="Y")
?plot
#ggplot2 (datos, aes()) + geom_type()
install.packages("ggplot2")
install.packages("gapminder") #nos trae un dataset sobre datos de esperanza de vida por países y continentes.
library(ggplot2)
library(gapminder)
library(dplyr)
head(gapminder,n=5)
data_spain <- gapminder %>% filter(country=="Spain")
data_spain
library(ggplot2)
library(gapminder)
library(dplyr)
head(gapminder,n=5)
data_spain <- gapminder %>% filter(country=="Spain")
data_spain
install.packages("ggplot2")
install.packages("gapminder") #nos trae un dataset sobre datos de esperanza de vida por países y continentes.
library(ggplot2)
library(gapminder)
library(dplyr)
head(gapminder,n=5)
data_spain <- gapminder %>% filter(country=="Spain")
data_spain
install.packages("ggplot2")
install.packages("gapminder")
ggplot(data=data_spain,aes(x=year,y=lifeExp)) + geom_line()
library(ggplot2)
library(gapminder)
library(dplyr)
head(gapminder,n=5)
data_spain <- gapminder %>% filter(country=="Spain")
data_spain
ggplot(data=data_spain,aes(x=year,y=lifeExp)) + geom_line()
ggplot(data=data_spain,aes(x=year,y=lifeExp)) + geom_line(color="green")
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green")
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green") +
gem_text()
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green") +
geom_text(label=lifeExp)
geom_text(aes(label=lifeExp)
geom_text(aes(label=lifeExp)
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green") +
geom_text(aes(label=lifeExp)
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green") +
geom_text(aes(label=lifeExp))
ggplot(data=data_spain,aes(x=year,y=lifeExp)) +
geom_line(color="green") +
geom_point(size=3,color="green") +
geom_text(aes(label=lifeExp)) + #cuando especificamos un parámetro (p.e. label) respecto de una variable, siempre debemos hacerlo dentro de una función aes. Esto no hace falta si especificamos un
#valor absoluto, por ejemplo, color="green".
labs(title="Evolución de la esperanza de vida en España",
x="Años",
y="Esperanza de vida")
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise(n())
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise("Número de países"=n())
datos
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise("Nº of countries"=n())
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise("#_countries"=n())
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise("n_countries"=n())
datos
ggplot(datos,aes(x=continent,y=n_countries)) + geom_bar()
ggplot(datos,aes(x=continent,y=n_countries)) + geom_bar(stat_count(n_countries))
datos
ggplot(datos,aes(x=continent,y=n_countries)) + geom_bar(stat_count(n_countries))
ggplot(datos) + geom_bar(data=datos,stat_count(n_countries))
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% summarise("n_countries"=count())
datos
datos <- gapminder %>% select(country,continent) %>% group_by(continent) %>% filter(!duplicated(country))
datos
ggplot(data=datos)+geom_bar(aes(x=continent))
ggplot(data=datos)+geom_bar(aes(y=continent))
ggplot(data=datos)+geom_bar(aes(y=continent),fill="blue")
ggplot(data=datos)+
geom_bar(aes(y=continent),fill="blue") +
labs(title="Países por continente",x="Continente",y="Nº de países")
ggplot(data=datos)+
geom_bar(aes(y=continent),fill="blue") +
labs(title="Países por continente",x="Continente",y="Nº de países")
ggplot(data=datos)+
geom_bar(aes(x=continent),fill="blue") +
labs(title="Países por continente",x="Continente",y="Nº de países")
europe <- gapminder %>% filter(country=="Europe")
ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
europe
europe <- gapminder %>% filter(continent=="Europe")
europe
ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
point
europe <- gapminder %>% filter(continent=="Asia")
europe
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
point
europe <- gapminder %>% filter(continent=="Europe")
europe
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) + geom_point()
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpCap))
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPerCap))
point
europe <- gapminder %>% filter(continent=="Europa")
europe
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPerCap))
point
europe <- gapminder %>% filter(continent=="Europe")
europe
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPerCap))
point
europe
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap))
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop))
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5)
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) +
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida")    #alpha para regular opacidad de los colores.
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank(()))
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank())
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank()) + #para quitar el grid que aparece por defecto en el fondo.
theme(legend.position = none)
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank()) + #para quitar el grid que aparece por defecto en el fondo.
theme(legend.position = none)
point
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank()) + #para quitar el grid que aparece por defecto en el fondo.
theme(legend.position = none)
point <- ggplot(data=europe,aes(x=year,y=lifeExp)) +
geom_point(aes(color=gdpPercap,size=pop),alpha=3/5) + #alpha para regular opacidad de los colores.
labs(title="Evolución de la esperanza de vida en Europa",
x="Años",
y="Esperanza de vida") +
theme(panel.background = element_blank()) + #para quitar el grid que aparece por defecto en el fondo.
theme(legend.position = "none")
point
(mlbench)
(mlbench)
install.packages("mlbench")
library(mlbench)
library(ggplot2)
?mpg
head(mpg, n=5)
ggplot(data=mpg, aes(x=cyl)) + geom_histogram()
ggplot(data=mpg, aes(x=cyl)) + geom_histogram() +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 1) +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 2) +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7) +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl),color="red") + geom_histogram(binwidth = 0.7) +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl),color="red") + geom_histogram(binwidth = 0.7) +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7, fill="red") +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7, fill="red",color="black") +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
head(mpg, n=5)
ggplot(data=mpg, aes(x=class)) + geom_bar()
ggplot(data=mpg, aes(x=class)) + geom_bar() +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches")
ggplot(data=mpg, aes(x=class)) + geom_bar() +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank())
ggplot(data=mpg, aes(x=class)) + geom_bar() +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar() +
labs(title="Distribución de Coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar() +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar(fill=manufacturer) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar(fill=manufacturer) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar(aes(fill=manufacturer)) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red"))
ggplot(data=mpg, aes(x=class)) + geom_bar(aes(fill=manufacturer)) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red")) +
theme(legend.position = "None")
ggplot(data=mpg, aes(x=trans, y=cyl)) + geom_boxplot()
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot()
library(stringr)
library(dplyr)
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot() +
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot() +
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot()
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot()
install.packages("mlbench")
install.packages("mlbench")
library(mlbench)
library(ggplot2)
library(stringr)
library(dplyr)
?mpg
head(mpg, n=5)
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7, fill="red",color="black") +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=class)) + geom_bar(aes(fill=manufacturer)) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red")) +
theme(legend.position = "None")
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot()
head(mpg, n=5)
library(mlbench)
library(ggplot2)
library(stringr)
library(dplyr)
?mpg
head(mpg, n=5)
install.packages("mlbench")
library(mlbench)
install.packages("mlbench")
library(ggplot2)
library(stringr)
install.packages("mlbench")
library(dplyr)
?mpg
head(mpg, n=5)
head(mpg, n=5)
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7, fill="red",color="black") +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=class)) + geom_bar(aes(fill=manufacturer)) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red")) +
theme(legend.position = "None")
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot()
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot() +
+ labs(title="Consumo por tipo de transmisión",
x="Transmisión",
y="Consumo en ciudad")
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot() +
labs(title="Consumo por tipo de transmisión",
x="Transmisión",
y="Consumo en ciudad")
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot() +
labs(title="Consumo urbano por tipo de transmisión",
x="Transmisión",
y="Consumo urbano")
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot(aes(color=trans)) +
labs(title="Consumo urbano por tipo de transmisión",
x="Transmisión",
y="Consumo urbano")
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot(aes(color=trans,fill=trans) +
x="Transmisión",
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot(aes(fill=trans) +
x="Transmisión",
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot(aes(fill=trans) +
labs(title="Consumo urbano por tipo de transmisión",
x="Transmisión",
y="Consumo urbano")
theme(legend.position = "none")
ggplot(data=mpg, aes(x=trans, y=cty)) + geom_boxplot(aes(fill=trans) +
labs(title="Consumo urbano por tipo de transmisión",
x="Transmisión",
y="Consumo urbano") +
theme(legend.position = "none")
theme(legend.position = "none",panel.background = element_blank())
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans) +
labs(title="Consumo urbano por tipo de transmisión",
x="Transmisión",
y="Consumo urbano") +
theme(legend.position = "none",panel.background = element_blank())
ggplot(data=mpg, aes(x=trans, y=cty)) +
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans)
?mpg
head(mpg, n=5)
ggplot(data=mpg, aes(x=cyl)) + geom_histogram(binwidth = 0.7, fill="red",color="black") +
labs(title="Distribución de cilindrada",
x="Cilindros",
y="Número de coches")
ggplot(data=mpg, aes(x=class)) + geom_bar(aes(fill=manufacturer)) +
labs(title="Distribución de coches por clase",
x="Clase",
y="Número de coches") +
theme(panel.background = element_blank(),plot.title = element_text(color="red")) +
theme(legend.position = "None")
mpg$trans <- mpg$trans %>% str_sub(1,-5)
ggplot(data=mpg, aes(x=trans, y=cty)) +
labs(title="Consumo urbano por tipo de transmisión",
y="Consumo urbano") +
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans)
ggplot(data=mpg, aes(x=trans, y=cty)) +
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans))
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans)) +
labs(title="Consumo urbano por Transmisión",
x="Transmisión",
y="Consumo urbano")
ggplot(data=mpg, aes(x=trans, y=cty)) +
geom_boxplot(aes(fill=trans)) +
labs(title="Consumo urbano por Transmisión",
x="Transmisión",
y="Consumo urbano") +
theme(legend.position = "none",panel.background = element_blank())
ggplot(data=mpg,aes(x=cty,y=hwy)) +
geom_point()
ggplot(data=mpg,aes(x=cty,y=hwy)) +
geom_point(aes(color=trans,size=cyl))
ggplot(data=mpg,aes(x=cty,y=hwy)) +
geom_point(aes(color=trans,size=cyl)) +
facet_wrap(class)
ggplot(data=mpg,aes(x=cty,y=hwy)) +
geom_point(aes(color=trans,size=cyl)) +
facet_wrap(~class)
ggplot(data=mpg,aes(x=cty,y=hwy)) +
geom_point(aes(color=class,size=cyl)) +
facet_wrap(~trans)
